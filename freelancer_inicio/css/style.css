/*El rem es una medida adaptativa a las nuevas pantallas*/
/*Para dar valor una hoja css se lee de arriba abajo, pero entra en juego la especificidad, como mas especifico el selector ese color mandará aunque otro selector tambien afecte a la misma etiqueta, también pero no es recomendado si se le pone !important después del punto y coma al final del valor de la propiedad, eso mandará sobre todos los demás selectores*/



/*-----------------------------------------------------------------------------------------------------------ESTILOS Y DISEÑO-----------------------------------------------------------------------------------------*/

/*-------------------------------------------------GLOBALES------------------------------------*/
:root { /*Esto se le llaman custom properties*//*Esto es una variable llamada root que no está enlazada con ninguna etiqueta en el archivo html, pero ahora la estamos utilizando para poder definir unos colores(se pueden utilizar cualquier tipo de valor) en nuestro css y declararlos mediante variables*/
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #FFC107;
    --secundario: #0097A7;
    --gris: #757575;
    --grisclaro: #DFE9F3;
}

html { /*Con estas dos propiedades podemos "hackear" la página y así poder trabajar con rem mas facilmente en vez de pixeles (1rem = 10px) con esta formula*/
    font-size: 62.5%;
    box-sizing: border-box; /*Esta propiedad hace que se reinicien los tamaños que queremos, por ejemplo si queremos una imagen con 450px le podemos poner padding y no se sumará el padding aparte del tamaño, estrá todo comprimido en mismo tamaño que le hemos puesto a la imagen sin añadir pixeles adicionales por los laterales ni por arriba y abajo*/
    scroll-snap-type: y mandatory;/*Esta propiedad sirve para hacer scroll y que se vaya posicionando en las distintas secciones de nuestra web(tipo Apple) la y sirve para decirle que el scroll será de arriba hacia abajo(si ponemos una x será de izquierda a derecha)*/
}

/**SCROLL SNAP**/
.navegacion-principal,
.servicios,
.formulario {
    scroll-snap-align: center; /*Agrega el scroll y lo centra en la pantalla para que puedas ver el contenido*/
    scroll-snap-stop: always; /*Le dice que se pare siempre en la siguiente seccion donde se hace scroll*/
}


*, *:before, *:after { /*El selector (*) significa que se le aplique a todos los elementos que se encuentren en el html*/
    box-sizing: inherit;
}

body {
    font-size: 16px;
    font-family: 'Krub', sans-serif;/*Esta es la fuente que hemos importado de Google Fonts*/
    background-image: linear-gradient(to top, var(--grisclaro) 0%, var(--blanco) 100%); /*la variable linear gradient se utiliza para hacer degradados, el valor to top se indica que vaya de arriba abajo, y seguidamente van los colores con el porcentaje que ocupará cada uno*/
}

.sombra {
    box-shadow: 0px 2px 11px -1px rgba(0,0,0,0.67);/*Este código es de sombra y está generado en la web de www.cssmatic.com*/
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

.boton {
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    text-decoration: none;
    font-size: 2rem;
    margin-top: 3rem;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: 0.5rem;
    width: 90%;
    text-align: center;
    border: none; /*Se le ha aplicado esta propiedad para darle estilo al boton del formulario de Contacto*/
}

@media (min-width: 768px) {
    .boton{
        width: auto;
    }
}

.boton:hover {
    cursor: pointer;
}


/*----------------------------------------------UTILIDADES-----------------------------------------*/
.w-sm-100 {
    width: 100%;
}

@media (min-width: 768px) {
    .w-sm-100 {
        width: auto;
    }
}
.flex {
    display: flex;
}

.alinear-derecha {
    justify-content: flex-end;
}




/*------------------------------------------------------TIPOGRAFÍA---------------------------------*/
h1 {
    font-size: 3.8rem; /*1rem = 10px*/
}
h2 {
    font-size: 2.8rem;
}
h3 {
    font-size: 1.8rem;
}

h1,h2,h3 {
    text-align: center;
}



/*------------------------------------------------------TÍTULOS---------------------------------*/
.titulo span { /*Con este tipo de selector estamos diciendo que se le aplique este diseño a todos los span dentro de las etiquetas con la clase titulo*/
    font-size: 2rem;
}


/*---------------------------------BARRA DE NAVEGACIÓN-----------------------------------------*/
.contenedor { /*Este selector que empieza por un punto es porque viene de una clase del archivo html, utilizar clases es recomendable porque es reutilizable*/
    max-width: 120rem; /*En este caso hacemos que tome el maximo de la pantalla 1200px siempre, entonces el scroll para hacerlo responsive fluye más*/
    margin: 0 auto;/*Con solo utilizar la propiedad margin se pueden poner los valores (top, right, botton y left) en ese orden, siempre van en sentidio de las agujas del reloj, en este caso solo hay 2 valores 0 y auto(el valor 0 o primer valor siempre equivale a arriba y abajo y el valor auto o segundo valor siempre equivale a derecha e izquierda, se ponen 2 calores si coinciden arriba y abajo e izquierda y derecha para simplificar el código*/
}

.nav-bg {
    background-color: var(--secundario);/*Con el valor var definimos que queremos una variable en este caso del root y entre parentesis le damos el nombre que le hemos asignado al color almacenado en el root*/
}

.navegacion-principal {
    display: flex; /*La propiedad display hay block como el div que se apilan unas bajo otras e inline que se ponen al costado de otra com span(todas las etiquetas vienen con su propiedad), en este caso ponemos display flex para poder trabajar mas libremente y habilitar nuevas opciones de diseño*/
    flex-direction: column;/*Con esta propiedad se hace que se alineé verticalmente la barra de navegación*/
}

@media (min-width: 480px) {
    .navegacion-principal{
        flex-direction: row;/*con los mediaqueries le decimos que por encima de 768px se nuestre de forma horizontal y por debajo de forma vertical todo lo que está dentro de la navegación principal*/
        justify-content: space-between; /*Con esta propiedad y valor hacemos que el contenido esté justificado y el valor space-between hace que haya una separación entre los enlaces, enviando el primero y el utlimo a los bordes del nav y dando la misma separación entre todos ellos*/
    }
}
.navegacion-principal a {
    display: block;
    text-align: center;
    padding: 1rem;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: 700;/*Poner 700 o bold es lo mismo ya que esta fuente está importada de Google Fonts y hemos copiado una que con 700 era en negrita*/
}

.navegacion-principal a:hover {
    background-color: var(--primario);
    color: var(--oscuro);
}



/*------------------------------------------------IMÁGEN y DIRECCIÓN---------------------------*/
.hero {
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    position: relative;/*El position relative hace que si un selector que esté bajo otro selector con position absolute tome a este con el position relative como el total de la pagina por donde moverse, el otro se moverá con position absolute*/
    margin-bottom: 2rem;
}

.contenido-hero {
    position: absolute; /*Este selector hace que se pueda adaptar añ total de un selector padre con position relative, y solo poder moverse por dentro de el como si fuera el total de la página*/
    background-color: rgb(0 0 0/ 70%);
    width: 100%;
    height: 100%;

    display: flex;
    flex-direction: column;
    align-items: center;/*Align-items se utiliza para alinear horizontalmente el contenido de columnas cuando se utiliza flexbox y si se utilza flexdirection column(si fuera flexdirection row(o por defecto) se utilizarian las propiedades al reves, entonces justify-content se utilizaria para alinear horizontal y align-items verticalmente*/
    justify-content: center;/*Justifica el contenido de manera vertical*/
    
}

.contenido-hero h2,
.contenido-hero p {
    color: var(--blanco);
}

.contenido-hero .ubicacion {
    display: flex;
    align-items: flex-end;/*El valor flex-end hace que el contenido se coloque abajo del todo del contenido(align-items justifica de forma vertical cuando no hay un flex-direction column)*/
}


/*--------------------------------------------SERVICIOS----------------------------------------*/
@media (min-width: 768px) {
    .servicios {
        display: grid;/*esta variable utiliza los servicios de CSS grid*/
        grid-template-columns: 1fr 1fr 1fr; /* igual que escrbir 33.33% 33.33% 33.33%*//*la variable grid-template-columns permite que se divida el apartado en columnas(grid-template-rows permite que se divida en filas) el valor 1fr equivale a 1 fraccion del total, entonces 1fr equivale a 33.33% y por eso hay 3 1fr para que cada uno coja una fraccion y entre los 3 sumen el 100%*/
        column-gap: 1rem;
    }
}

.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.servicio h3 {
    color: var(--secundario);
    font-weight: normal;/*Tambien se le puede poner 400 en el valor para darle el estilo (sin bold)*/
}

.servicio p{
    line-height: 2; /*Esta propiedad sirve para darle un espaciado entre lineas al párrafo*/
    text-align: center;
}

.servicio .iconos {
    width: 15rem;
    height: 15rem;
    background-color: var(--primario);
    display: flex;
    border-radius: 50%;
    align-items: center;
    justify-content: space-evenly;
 
}


/*-------------------------------------FORMULARIO DE CONTACTO------------------------------------*/
.formulario {
    background-color: var(--gris);
    width: min( 60rem, 100% );/*Este valor le dice al navegador que escoja la opcion más pequeña, o 60rem(600px) o el 100% de la pantalla, esto sirve para hacer media queries sin utilizar media queries*/
    margin: 0 auto;
    padding: 2rem;
    border-radius: 1rem;
}

.formulario fieldset {  
    border: none;/*con esta propiedad y este valor le quitamos el borde que viene por defecto en el fieldset*/
}

.formulario legend { /*El legend es el titulo del formulario, en vez de utilizar una etiqueta "h" se utiliza la etiqueta legend*/
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--primario);
}

@media (min-width: 768px) {
    .contenedor-campos {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }

    .campo:nth-child(3),
    .campo:nth-child(4) { /*Con el nth-child le dice que de las clases que se llaman campo selecciona la 3 en este caso, empieza desde la 1 hasta la que termina*//*Esto tambien se puede hacer poniendo una clase a la etiqueta en html como hemos hecho todo el rato*/
        grid-column: 1 / 3; /*Esto va por columnas hay que mirarlo en forefox web developer para entenderlo bien*//*Aqui dice que vaya de la columna 1 a la columna 3*/
    }
}

.campo {
    margin-bottom: 1rem;
}

.campo label {
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}

.campo textarea {
    height: 20rem;
}

.input-text {
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}


/*--------------------------------------FOOTER----------------------------------------------------*/
.footer {
    text-align: center;
}